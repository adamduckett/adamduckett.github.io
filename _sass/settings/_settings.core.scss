///* ========================================================================
//   #CORE
//   ======================================================================== */

// Base page-level content wrapper width.

$wrapper-width: 1200px !default;





// Base typographical styles and baseline grid. You need to define these values
// in pixels and they will be converted to more appropriate units where needed.

$global-font-size:    16px !default;
$global-line-height:  24px !default;





// Spacing values are determined based on your projectâ€™s global line height (i.e
// your baseline grid). It is not recommended that you modify these following
// variables (it can break your vertical rhythm), but if you need to, you can.

$global-spacing-unit: round($global-line-height * 1.3333333);


// How many times larger/smaller than the default should our spacing unit
// variants be?

$global-spacing-unit-factor-tiny:   0.25 !default;
$global-spacing-unit-factor-small:  0.5  !default;
$global-spacing-unit-factor-large:  2.5;
$global-spacing-unit-factor-huge:   3;


// Define our variant modifiers' names
$modifier-tiny:   'tiny'  !default;
$modifier-small:  'small' !default;
$modifier-large:  'large' !default;
$modifier-huge:   'huge'  !default;





// Define our project's breakpoints
$breakpoints: (
    'mobile'  : 320px,
    'tablet'  : 740px,
    'desktop' : 980px,
    'wide'    : 1400px
) !default;





////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//                               W A R N I N G                                //
//                                                                            //
//                  DO NOT MODIFY ANYTHING BEYOND THIS POINT                  //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////


// Check that chosen width is a number.

@if (type-of($wrapper-width) != number) {
  @error "`#{$wrapper-width}` needs to be a number.";
}


// Check that the chosen font rules are pixel numbers.

@each $_font-globals in
      $global-font-size
      $global-line-height {

  @if (type-of($_font-globals) == number) {

    @if (unit($_font-globals) != "px") {
      @error "`#{$_font-globals}` needs to be a pixel value.";
    }

  } @else {
    @error "`#{$_font-globals}` needs to be a number.";
  }

}


// Check that the chosen size factors are unitless numbers.

@each $_spacing-unit in
      $global-spacing-unit-factor-tiny
      $global-spacing-unit-factor-small
      $global-spacing-unit-factor-large
      $global-spacing-unit-factor-huge {

  @if (type-of($_spacing-unit) == number) {

    @if (unitless($_spacing-unit) == false) {
      @error "`#{$_spacing-unit}` needs to be unitless.";
    }

  } @else {
    @error "`#{$_spacing-unit}` needs to be a number.";
  }

}


// Private/framework-only reassignment. Do not alter anything below.

$global-spacing-unit-tiny:  round($global-spacing-unit * $global-spacing-unit-factor-tiny);
$global-spacing-unit-small: round($global-spacing-unit * $global-spacing-unit-factor-small);
$global-spacing-unit-large: round($global-spacing-unit * $global-spacing-unit-factor-large);
$global-spacing-unit-huge:  round($global-spacing-unit * $global-spacing-unit-factor-huge);
